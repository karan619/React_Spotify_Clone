[{"C:\\Users\\kchauhan\\Desktop\\React_Spotify_App\\React_Spotify_Clone\\spotify-app\\src\\index.js":"1","C:\\Users\\kchauhan\\Desktop\\React_Spotify_App\\React_Spotify_Clone\\spotify-app\\src\\App.js":"2","C:\\Users\\kchauhan\\Desktop\\React_Spotify_App\\React_Spotify_Clone\\spotify-app\\src\\DataLyer.jsx":"3","C:\\Users\\kchauhan\\Desktop\\React_Spotify_App\\React_Spotify_Clone\\spotify-app\\src\\reducer.jsx":"4","C:\\Users\\kchauhan\\Desktop\\React_Spotify_App\\React_Spotify_Clone\\spotify-app\\src\\spotify.jsx":"5","C:\\Users\\kchauhan\\Desktop\\React_Spotify_App\\React_Spotify_Clone\\spotify-app\\src\\Components\\Player.jsx":"6","C:\\Users\\kchauhan\\Desktop\\React_Spotify_App\\React_Spotify_Clone\\spotify-app\\src\\Components\\Login.jsx":"7","C:\\Users\\kchauhan\\Desktop\\React_Spotify_App\\React_Spotify_Clone\\spotify-app\\src\\Components\\Sidebar.jsx":"8","C:\\Users\\kchauhan\\Desktop\\React_Spotify_App\\React_Spotify_Clone\\spotify-app\\src\\Components\\Body.jsx":"9","C:\\Users\\kchauhan\\Desktop\\React_Spotify_App\\React_Spotify_Clone\\spotify-app\\src\\Components\\Footer.jsx":"10","C:\\Users\\kchauhan\\Desktop\\React_Spotify_App\\React_Spotify_Clone\\spotify-app\\src\\Components\\SidebarOption.jsx":"11","C:\\Users\\kchauhan\\Desktop\\React_Spotify_App\\React_Spotify_Clone\\spotify-app\\src\\Components\\Header.jsx":"12","C:\\Users\\kchauhan\\Desktop\\React_Spotify_App\\React_Spotify_Clone\\spotify-app\\src\\Components\\SongRow.jsx":"13"},{"size":604,"mtime":1612287575013,"results":"14","hashOfConfig":"15"},{"size":1754,"mtime":1612805223048,"results":"16","hashOfConfig":"15"},{"size":392,"mtime":1612287736113,"results":"17","hashOfConfig":"15"},{"size":1137,"mtime":1619834532646,"results":"18","hashOfConfig":"15"},{"size":858,"mtime":1619835296721,"results":"19","hashOfConfig":"15"},{"size":507,"mtime":1612395541940,"results":"20","hashOfConfig":"15"},{"size":493,"mtime":1619835683886,"results":"21","hashOfConfig":"15"},{"size":1184,"mtime":1612351778323,"results":"22","hashOfConfig":"15"},{"size":1350,"mtime":1612805290072,"results":"23","hashOfConfig":"15"},{"size":1912,"mtime":1612395300874,"results":"24","hashOfConfig":"15"},{"size":343,"mtime":1612351142473,"results":"25","hashOfConfig":"15"},{"size":719,"mtime":1612805248719,"results":"26","hashOfConfig":"15"},{"size":530,"mtime":1612672287335,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"15u8n91",{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"30"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"30"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"C:\\Users\\kchauhan\\Desktop\\React_Spotify_App\\React_Spotify_Clone\\spotify-app\\src\\index.js",[],["58","59"],"C:\\Users\\kchauhan\\Desktop\\React_Spotify_App\\React_Spotify_Clone\\spotify-app\\src\\App.js",["60"],"import React, { useEffect } from \"react\";\nimport \"./App.css\";\nimport Login from \"./Components/Login\";\nimport Player from \"./Components/Player\";\nimport { getTokenFromUrl } from \"./spotify\";\nimport SpotifyWebApi from \"spotify-web-api-js\";\n\nimport { useDatatLayerValue } from \"./DataLyer\";\n\nconst spotify = new SpotifyWebApi(); //instance of spotify\n\nfunction App() {\n  //const [token, setToken] = useState(null);\n  const [{ user, token }, dispatch] = useDatatLayerValue();\n\n  //Run code based on give condition\n  useEffect(() => {\n    const hash = getTokenFromUrl(); //to get hash value from url\n    window.location.hash = \"\"; // to disapper hash value from url for security reason\n    const _token = hash.access_token; // to get the access_token value in token variable\n    if (_token) {\n      dispatch({\n        type: \"SET_TOKEN\",\n        token: _token,\n      });\n      //setToken(_token);\n\n      spotify.setAccessToken(_token); // it allow user to talk with spotify  services and our app back n forth\n      spotify.getMe().then((user) => {\n        dispatch({\n          type: \"SET_USER\",\n          user: user,\n        });\n      });\n      //console.log(\"I have a token\", _token);\n      spotify.getUserPlaylists().then((playlists) => {\n        dispatch({\n          type: \"SET_PLAYLISTS\",\n          playlists: playlists,\n        });\n      });\n\n      spotify.getPlaylist(\"37i9dQZEVXcDS5VvseI2i8\").then((response) => {\n        dispatch({\n          type: \"SET_DISCOVER_WEEKLY\",\n          discover_weekly: response,\n        });\n      });\n    }\n  }, [dispatch]);\n\n  //console.log(\"User Information\" + user);\n  return (\n    <>\n      <div className=\"App\">\n        {token ? <Player spotify={spotify} /> : <Login />}\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","C:\\Users\\kchauhan\\Desktop\\React_Spotify_App\\React_Spotify_Clone\\spotify-app\\src\\DataLyer.jsx",[],"C:\\Users\\kchauhan\\Desktop\\React_Spotify_App\\React_Spotify_Clone\\spotify-app\\src\\reducer.jsx",[],"C:\\Users\\kchauhan\\Desktop\\React_Spotify_App\\React_Spotify_Clone\\spotify-app\\src\\spotify.jsx",[],"C:\\Users\\kchauhan\\Desktop\\React_Spotify_App\\React_Spotify_Clone\\spotify-app\\src\\Components\\Player.jsx",[],"C:\\Users\\kchauhan\\Desktop\\React_Spotify_App\\React_Spotify_Clone\\spotify-app\\src\\Components\\Login.jsx",[],"C:\\Users\\kchauhan\\Desktop\\React_Spotify_App\\React_Spotify_Clone\\spotify-app\\src\\Components\\Sidebar.jsx",[],"C:\\Users\\kchauhan\\Desktop\\React_Spotify_App\\React_Spotify_Clone\\spotify-app\\src\\Components\\Body.jsx",["61"],"import React from \"react\";\r\nimport \"./Body.css\";\r\nimport Header from \"./Header\";\r\nimport SongRow from \"./SongRow\";\r\nimport PlayCircleFilledIcon from \"@material-ui/icons/PlayCircleFilled\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\r\nimport { useDatatLayerValue } from \"../DataLyer\";\r\n\r\nconst Body = ({ spotify }) => {\r\n  const [{ discover_weekly }, dispatch] = useDatatLayerValue();\r\n\r\n  return (\r\n    <>\r\n      <div className=\"body\">\r\n        <Header spotify={spotify} />\r\n        <div className=\"body_info\">\r\n          <img src={discover_weekly?.images[0]?.url} alt=\"Discover weekly\" />\r\n          <div className=\"body_infoText\">\r\n            <strong>PLAYLIST</strong>\r\n            <h2>{discover_weekly?.name}</h2>\r\n            <p>{discover_weekly?.description}</p>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"body_songs\">\r\n          <div className=\"body_icons\">\r\n            <PlayCircleFilledIcon className=\"body_shuffle\" />\r\n            <FavoriteIcon fontSize=\"large\" />\r\n            <MoreHorizIcon />\r\n          </div>\r\n          {/**List of Songs */}\r\n          {discover_weekly?.tracks.items.map((item, key) => {\r\n            return <SongRow track={item.track} />;\r\n          })}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Body;\r\n","C:\\Users\\kchauhan\\Desktop\\React_Spotify_App\\React_Spotify_Clone\\spotify-app\\src\\Components\\Footer.jsx",[],"C:\\Users\\kchauhan\\Desktop\\React_Spotify_App\\React_Spotify_Clone\\spotify-app\\src\\Components\\SidebarOption.jsx",[],"C:\\Users\\kchauhan\\Desktop\\React_Spotify_App\\React_Spotify_Clone\\spotify-app\\src\\Components\\Header.jsx",["62"],"import React from \"react\";\r\nimport \"./Header.css\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport { useDatatLayerValue } from \"../DataLyer\";\r\nconst Header = () => {\r\n  const [{ user }, dispatch] = useDatatLayerValue();\r\n\r\n  return (\r\n    <>\r\n      <div className=\"header\">\r\n        <div className=\"header_left\">\r\n          <SearchIcon />\r\n          <input placeholder=\"Search for Artists,Songs\" type=\"text\" />\r\n        </div>\r\n        <div className=\"header_right\">\r\n          <Avatar alt={user?.display_name} src={user?.images[0]?.url} />\r\n          <h4>{user?.display_name}</h4>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","C:\\Users\\kchauhan\\Desktop\\React_Spotify_App\\React_Spotify_Clone\\spotify-app\\src\\Components\\SongRow.jsx",[],{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","severity":1,"message":"68","line":14,"column":12,"nodeType":"69","messageId":"70","endLine":14,"endColumn":16},{"ruleId":"67","severity":1,"message":"71","line":11,"column":31,"nodeType":"69","messageId":"70","endLine":11,"endColumn":39},{"ruleId":"67","severity":1,"message":"71","line":7,"column":20,"nodeType":"69","messageId":"70","endLine":7,"endColumn":28},"no-native-reassign",["72"],"no-negated-in-lhs",["73"],"no-unused-vars","'user' is assigned a value but never used.","Identifier","unusedVar","'dispatch' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]